firmware:
  image: debian
  stage: build
  before_script:
  - apt update
  - apt install -y gcc-arm-none-eabi make python3 git
  script:
  - make clean
  - make
  - make binall
  - echo $(git branch --show-current)
  artifacts:
    paths:
     - obj_app
     - obj_boot
     - obj_f3_boot
     - obj_hvf3
     - stmbl.dfu
     - f3.bin
     - f3.dfu
     - f4.bin
     - f4.dfu

pages:
  image: 
    name: golang:1.23.1-bookworm
  stage: deploy
  variables:
    DART_SASS_VERSION: 1.77.5
    HUGO_VERSION: 0.134.2
    NODE_VERSION: 20.x
    GIT_DEPTH: 0
    GIT_STRATEGY: clone
    GIT_SUBMODULE_STRATEGY: recursive
    #TZ: America/Los_Angeles
  before_script:
      # Install brotli
    # - apt-get update
    # - apt-get install -y brotli
    # # Install Dart Sass
    # - curl -LJO https://github.com/sass/dart-sass/releases/download/${DART_SASS_VERSION}/dart-sass-${DART_SASS_VERSION}-linux-x64.tar.gz
    # - tar -xf dart-sass-${DART_SASS_VERSION}-linux-x64.tar.gz
    # - cp -r dart-sass/ /usr/local/bin
    # - rm -rf dart-sass*
    # - export PATH=/usr/local/bin/dart-sass:$PATH
    # Install Hugo
    - curl -LJO https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb
    - apt-get install -y ./hugo_extended_${HUGO_VERSION}_linux-amd64.deb
    - rm hugo_extended_${HUGO_VERSION}_linux-amd64.deb
    # Install Node.js
    # - curl -fsSL https://deb.nodesource.com/setup_${NODE_VERSION} | bash -
    # - apt-get install -y nodejs
    # # Install Node.js dependencies
    # - "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
  script:
  - hugo --gc --minify --source ./docs/stmbldoc --baseURL 'http://freakontrol.pages.freakontrol.com/bobot/stmbl'
  - find public -type f -regex '.*\.\(css\|html\|js\|txt\|xml\)$' -exec gzip -f -k {} \;
  - find public -type f -regex '.*\.\(css\|html\|js\|txt\|xml\)$' -exec brotli -f -k {} \;
  - echo "The site will be deployed to $CI_PAGES_URL"
  artifacts:
    paths:
    - public
